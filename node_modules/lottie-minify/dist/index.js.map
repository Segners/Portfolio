{"version":3,"sources":["../src/index.ts","../src/common.ts"],"sourcesContent":["import { clone, defaultConfig, isNil, fixed, isNumber } from \"./common\";\r\nimport { Config } from \"./type\";\r\nexport * from \"./type\";\r\nimport { LottieJSON } from \"lottie-type\";\r\n\r\nexport const lottieMinify = (data: LottieJSON, config: Config = {}) => {\r\n  if (\r\n    isNil(data) ||\r\n    (typeof data !== \"string\" && typeof data !== \"object\") ||\r\n    Array.isArray(data)\r\n  ) {\r\n    throw new Error(\"lottie data must be String or Object\");\r\n  }\r\n\r\n  const mergeConfig = { ...defaultConfig, ...config };\r\n  const { copy } = mergeConfig;\r\n  if (copy) {\r\n    data = clone(data);\r\n  }\r\n\r\n  walk(data, mergeConfig);\r\n  fixAttrIndIsUndefined(data);\r\n  return data;\r\n};\r\n\r\nconst walk = (lottieData: LottieJSON, config: Required<Config>) => {\r\n  const { dropKeyList, numberFixLength } = config;\r\n  const numberFixFun = fixed(numberFixLength);\r\n  const refIdList: string[] = [];\r\n  const getRefId = (id: string) => {\r\n    let i = refIdList.indexOf(id);\r\n    if (i === -1) {\r\n      refIdList.push(id);\r\n      i = refIdList.length - 1;\r\n    }\r\n    return i;\r\n  };\r\n  const dfs = (data: any) => {\r\n    if (isNil(data)) {\r\n      return;\r\n    }\r\n    if (typeof data === \"string\" || typeof data === \"number\") return;\r\n    if (Array.isArray(data)) {\r\n      data.forEach((item, k) => {\r\n        if (isNumber(item)) {\r\n          data[k] = numberFixFun(item);\r\n        } else {\r\n          dfs(item);\r\n        }\r\n      });\r\n    } else if (typeof data === \"object\") {\r\n      for (const k of dropKeyList) {\r\n        if (k in data && data[k]) {\r\n          delete data[k];\r\n        }\r\n      }\r\n      for (let k in data) {\r\n        if (isNumber(data[k])) {\r\n          data[k] = numberFixFun(data[k]);\r\n        } else if (k === \"refId\") {\r\n          data[\"refId\"] = getRefId(data[k]);\r\n        } else if (k === \"id\") {\r\n          data[\"id\"] = getRefId(data[k]);\r\n        } else {\r\n          dfs(data[k]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  dfs(lottieData);\r\n};\r\n\r\n// https://github1s.com/fancy-lottie/lottie-compress/blob/HEAD/src/main.ts\r\nconst fixAttrIndIsUndefined = (lottieData: any) => {\r\n  lottieData.layers.forEach((layer: any, index: number) => {\r\n    if (layer.ind === undefined) {\r\n      layer.ind = index + 1;\r\n    }\r\n  });\r\n  lottieData.assets.forEach((asset: any) => {\r\n    if (asset.layers) {\r\n      asset.layers.forEach((layer: any, index: number) => {\r\n        if (layer.ind === undefined) {\r\n          layer.ind = index + 1;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return lottieData;\r\n};\r\n","import { Config } from \"./type\";\r\n\r\nexport const clone = <T>(data: T): T => {\r\n  if (typeof data !== \"object\") throw new Error(\"lottie data type error!\");\r\n  return JSON.parse(JSON.stringify(data));\r\n};\r\n\r\nexport const defaultDropKeyList = [\"nm\", \"tyName\", \"n\", \"mn\", \"cl\", \"ln\"];\r\n\r\nexport const defaultConfig: Required<Config> = {\r\n  copy: false,\r\n  dropKeyList: defaultDropKeyList,\r\n  numberFixLength: 3,\r\n};\r\n\r\nexport const isNil = <T>(x: T) => x === null || x === undefined;\r\n\r\nexport const fixed = (length: number) => {\r\n  const r = 10 ** length;\r\n  return (x: number) => {\r\n    return Math.round(x * r) / r;\r\n  };\r\n};\r\n\r\nexport const isNumber = (n: unknown): n is number => {\r\n  return typeof n === \"number\";\r\n};\r\n"],"mappings":"iyBAAA,mCCEO,GAAM,GAAQ,AAAI,GAAe,CACtC,GAAI,MAAO,IAAS,SAAU,KAAM,IAAI,OAAM,yBAAyB,EACvE,MAAO,MAAK,MAAM,KAAK,UAAU,CAAI,CAAC,CACxC,EAEa,EAAqB,CAAC,KAAM,SAAU,IAAK,KAAM,KAAM,IAAI,EAE3D,EAAkC,CAC7C,KAAM,GACN,YAAa,EACb,gBAAiB,CACnB,EAEa,EAAQ,AAAI,GAAS,GAAM,KAE3B,EAAQ,AAAC,GAAmB,CACvC,GAAM,GAAI,IAAM,EAChB,MAAO,AAAC,IACC,KAAK,MAAM,EAAI,CAAC,EAAI,CAE/B,EAEa,EAAW,AAAC,GAChB,MAAO,IAAM,SDpBf,GAAM,GAAe,CAAC,EAAkB,EAAiB,CAAC,IAAM,CACrE,GACE,EAAM,CAAI,GACT,MAAO,IAAS,UAAY,MAAO,IAAS,UAC7C,MAAM,QAAQ,CAAI,EAElB,KAAM,IAAI,OAAM,sCAAsC,EAGxD,GAAM,GAAc,OAAK,GAAkB,GACrC,CAAE,QAAS,EACjB,MAAI,IACF,GAAO,EAAM,CAAI,GAGnB,EAAK,EAAM,CAAW,EACtB,EAAsB,CAAI,EACnB,CACT,EAEM,EAAO,CAAC,EAAwB,IAA6B,CACjE,GAAM,CAAE,cAAa,mBAAoB,EACnC,EAAe,EAAM,CAAe,EACpC,EAAsB,CAAC,EACvB,EAAW,AAAC,GAAe,CAC/B,GAAI,GAAI,EAAU,QAAQ,CAAE,EAC5B,MAAI,KAAM,IACR,GAAU,KAAK,CAAE,EACjB,EAAI,EAAU,OAAS,GAElB,CACT,EACM,EAAM,AAAC,GAAc,CACzB,GAAI,GAAM,CAAI,GAGV,QAAO,IAAS,UAAY,MAAO,IAAS,WAChD,GAAI,MAAM,QAAQ,CAAI,EACpB,EAAK,QAAQ,CAAC,EAAM,IAAM,CACxB,AAAI,EAAS,CAAI,EACf,EAAK,GAAK,EAAa,CAAI,EAE3B,EAAI,CAAI,CAEZ,CAAC,UACQ,MAAO,IAAS,SAAU,CACnC,OAAW,KAAK,GACd,AAAI,IAAK,IAAQ,EAAK,IACpB,MAAO,GAAK,GAGhB,OAAS,KAAK,GACZ,AAAI,EAAS,EAAK,EAAE,EAClB,EAAK,GAAK,EAAa,EAAK,EAAE,EACzB,AAAI,IAAM,QACf,EAAK,MAAW,EAAS,EAAK,EAAE,EAC3B,AAAI,IAAM,KACf,EAAK,GAAQ,EAAS,EAAK,EAAE,EAE7B,EAAI,EAAK,EAAE,CAGjB,EACF,EACA,EAAI,CAAU,CAChB,EAGM,EAAwB,AAAC,GAC7B,GAAW,OAAO,QAAQ,CAAC,EAAY,IAAkB,CACvD,AAAI,EAAM,MAAQ,QAChB,GAAM,IAAM,EAAQ,EAExB,CAAC,EACD,EAAW,OAAO,QAAQ,AAAC,GAAe,CACxC,AAAI,EAAM,QACR,EAAM,OAAO,QAAQ,CAAC,EAAY,IAAkB,CAClD,AAAI,EAAM,MAAQ,QAChB,GAAM,IAAM,EAAQ,EAExB,CAAC,CAEL,CAAC,EACM","names":[]}